// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------
@import "accessibility";
@import "ellipsis";
@import "focus";
@import "grid";
@import "placeholder";
@import "shapes";
@import "scrollbars";
@import "transforms";


// PUSH AUTO
// ===========================================
// To quickly centre a block element without having to worry about if there is any top or bottom margin already applied.
@mixin push--auto {
  margin: {
    right: auto;
    left: auto;
  }
}

// PSEUDO
// ===========================================
// When using ::before and ::after you'll always need these three, so we're saving two lines of code every time you use this.
@mixin pseudo($display: block, $pos: absolute, $content: '') {
  display: $display;
  position: $pos;
  content: $content;
}

/// Event wrapper
// ===========================================
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }

  } @else {

    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}


// BACKGROUND IMAGES
// ===========================================
@mixin bkg-image($size: cover, $position: center) {
  background-repeat: no-repeat;
  background-position: $position;
  background-size: $size;
}

@mixin absolute-bkg($size: cover, $top: 0, $right: 0, $bottom: 0, $left: 0) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  background-repeat: no-repeat;
  background-position: center;
  background-size: $size;
}


// RESPONSIVE RATIO / FIXED ASPECT RATIO
// ===========================================
// We use this for creating scalable elements (usually images / background images) that maintain a ratio.
@mixin responsive-ratio($x, $y, $pseudo: false) {

  $padding: ( $y / $x ) * 100 + '%';
  $x: abs(strip-unit(unquote($x)));
  $y: abs(strip-unit(unquote($y)));

  @if $pseudo {
    &::before {
      @include pseudo($pos: relative);
      padding-top: $padding;
      width: 100%;
    }

    > .inner-box {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  } @else {
    padding-top: $padding;
  }
}


// ANIMATED GRADIENT
// ===========================================
@mixin animated-grad($grad: $all-grad-h, $speed: 180s) {

  background: $grad;
  background-size: 400% 400%;

  -webkit-animation: AnimationName $speed ease infinite;
  -moz-animation: AnimationName $speed ease infinite;
  animation: AnimationName $speed ease infinite;


  @-webkit-keyframes AnimationName {
    0%{background-position: 0% 50%}
    50%{background-position: 100% 50%}
    100%{background-position: 0% 50%}
  }
  @-moz-keyframes AnimationName {
    0%{background-position: 0% 50%}
    50%{background-position: 100% 50%}
    100%{background-position: 0% 50%}
  }
  @keyframes AnimationName {
    0%{background-position: 0% 50%}
    50%{background-position: 100% 50%}
    100%{background-position: 0% 50%}
  }
}


// Themes
// ==================================================
@mixin theme-light {
  background: transparent;
  color: $gray-700;
}

@mixin theme-dark {
  background: $gray-700;
  color: $white;
}

@mixin theme-info {
  background: $info-bkg;
  color: $info;
}

@mixin theme-danger {
  background: $danger-bkg;
  color: $danger;
}

@mixin theme-warning {
  background: $warning-bkg;
  color: $warning;
}

@mixin theme-success {
  background: $success-bkg;
  color: $success;
}
